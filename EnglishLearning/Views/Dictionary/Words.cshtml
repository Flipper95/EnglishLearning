@*@model IEnumerable<object[]>*@
@using EnglishLearning.ExtendClasses;
@model EnglishLearning.Controllers.PagedList<EnglishLearning.Controllers.WordsDisplay>
@{
    ViewBag.Title = "Words";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var grid = new WebGrid(canPage: true, rowsPerPage: Model.PageSize, ajaxUpdateContainerId: "grid");
    grid.Bind(source: Model.Content, rowCount: Model.TotalRecords, autoSortAndPage: false);
    @*@:<script>$("#RowsPerPage").text()</script>*@
}

<h2>Words</h2>

<div class="thead-dark">
</div>
@*@Html.DropDownList("RowsPerPage", new SelectList(new List<int> { 10, 25, 50, 100 }), new { id = "RowsPerPage", @class = "btn btn-info text-light" })*@
@*<select id="RowsPerPage" name="RowsPerPage" class="btn btn-secondary text-light">
    <option>
        @Html.RouteLink("10", new { controller="Dictionary", action="Words", area="", pageSize = 10, id = ViewBag.GroupId })
        </option>
    <option>
        @Html.ActionLink("25", "Words", new { area = "", pageSize = 25, id = ViewBag.GroupId })
        </option>
    <option>
        @Html.ActionLink("50", "Words", new { area = "", pageSize = 50 })
    </option>
</select>*@
@*@using(Html.BeginForm("RowsPerPage", "Dictionary"))
{*@
<div class="d-flex flex-row">
    <select class="btn btn-outline-info mb-1 mr-1" id="rowsperpage" name="rowsperpage" val="@Model.PageSize">
        <option data-url="@Url.Action("RowsPerPage", new { area = "", id = ViewBag.GroupId, pageSize = 10 })" value="10">10</option>  @*page = Model.CurrentPage, prevPageSize = Model.PageSize,totalPages = Model.TotalPages*@
        <option data-url="@Url.Action("RowsPerPage", new { area = "", id = ViewBag.GroupId, pageSize = 25 })" value="25">25</option>
        <option data-url="@Url.Action("RowsPerPage", new { area = "", id = ViewBag.GroupId, pageSize = 50 })" value="50">50</option>
        <option data-url="@Url.Action("RowsPerPage", new { area = "", id = ViewBag.GroupId, pageSize = 100 })" value="100">100</option>
    </select>
    @*}*@


    <div class="ml-auto">
        <div class="input-group mb-1">
          <input id="searchData" type="text" class="form-control" placeholder="Слово або значення" aria-label="Слово або значення" aria-describedby="button-addon2" value="@(ViewBag.SearchData == null ? "" : ViewBag.SearchData)">
          <div class="input-group-append">
            <button id="search" class="btn btn-outline-secondary" type="button" data-url="@Url.Action("Search", new { area = "", id = ViewBag.GroupId })">Пошук</button>
          </div>
        </div>
    </div>
</div>

@*//TO DO:ajax - on begin change badge class not use respond from server*@
@grid.GetHtml(
    tableStyle: "table table-hover", headerStyle: "thead-dark", caption: "Вибір слів на вивчення",
    mode: WebGridPagerModes.All, numericLinksCount: 5,
    columns: grid.Columns(
        grid.Column(header: "Відмітити", format:
        //<input type="checkbox" id="cb_@item.Value.wordId" checked="@item.Value.inLearning">
        @*@<input type = 'checkbox' id = cb_" + (@item.Value.wordId as int?) + " checked= '" + (@item.Value.inLearning as bool?) + "' >*@
        @:@Ajax.RawActionLink( @item.Value.inLearning == false ? "<div id = cb_" + (@item.Value.wordId as int?) + " class='badge badge-secondary'>Додати слово</div>" : "<div id = cb_" + (@item.Value.wordId as int?) + " class='badge badge-success'>На вивченні</div>", "EditWord", "Dictionary", new{ area = "", id = @item.Value.wordId, check = @item.Value.inLearning },
       new AjaxOptions {
           OnBegin = "WordInLearningChange(" + @item.Value.wordId + ")",
           OnSuccess = "MessageShow"
       }, null)
),
                                grid.Column("word", header: "Слово", format: @<div>@item.Value.word</div>),
                                                        grid.Column("translate", header: "Значення", format:@<div>@item.Value.translate</div>)), @*@item[1].Translate*@
                                                        previousText: "Попередня", nextText: "Наступна", firstText: "Перша", lastText: "Остання",
                        footerStyle: "tfoot", htmlAttributes: new { id = "grid" })

@*<nav aria-label="...">
        <ul class="pagination">
            <li @(Model.CurrentPage>1 ? "page-item disabled" : "page-item")>
                @Html.ActionLink("Попередня", "Words", new { area = "", id = ViewBag.GroupId, page = Model.CurrentPage - 1, size = Model.PageSize }, new { @class = "page-link" })
            </li>
            @for(int i=0; i<)
            @if (Model.CurrentPage > 1) {
                <li class="page-item">
                    @Html.ActionLink((Model.CurrentPage-1).ToString(), "Words", new { area = "", id = ViewBag.GroupId, page = Model.CurrentPage - 1, size = Model.PageSize }, new { @class = "page-link" })
                </li>
            }

            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item active">
                <a class="page-link" href="#">2 <span class="sr-only">(current)</span></a>
            </li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
                <a class="page-link" href="#">Next</a>
            </li>
        </ul>
    </nav>*@
@*OnSuccess = "MessageShow(data)",*@
<div id="messages"></div>

@section Scripts{
    <script type="text/javascript">

        var BuildUrl = function () {
            var searchData = $("#searchData").val();
            var urlSize = $("#rowsperpage option:selected").data('url');
            var url;
            if (searchData) {
                var urlSearch = $("#search").data('url');
                urlSize = urlSize.substring(urlSize.indexOf("?") + 1);
                urlSearch += "?search="+searchData;
                url = urlSearch + "&" + urlSize;
            }
            else {
                url = urlSize;
            }
            document.location = url;
        }

        var WordInLearningChange = function (data) {
            var clas = $("#cb_" + data).attr('class');
            var val1 = "badge badge-secondary";
            var val2 = "badge badge-success";
            if (clas === val1) {
                $("#cb_" + data).attr('class', val2);
                $("#cb_" + data).text("На вивченні");
            }
            else {
                $("#cb_" + data).attr('class', val1);
                $("#cb_" + data).text("Додати слово");
            }
        }
        var MessageShow = function () {
            $("#messages").html("<div class='alert alert - warning alert - dismissible fade show' role='alert'>"
                + "Ваш словник було успішно змінено"
                + "<button type = 'button' class= 'close' data - dismiss='alert' aria - label='Close' >"
                + "<span aria-hidden='true'>&times;</span></button ></div >");
        }

        window.onload =
            $(document).ready(function () {
                $("tfoot a").addClass('btn btn-secondary mb-1'); // add bootstrap buttons

                // add active bootstrap button
                $("tfoot td")
                    .contents()
                    .filter(function () {
                        if (this.nodeType === 3 && this.length > 1) {
                            return this.nodeType
                        }
                    })
                    .wrap('<span class="btn btn-primary mx-1 mb-1" />');

                var value = $("#rowsperpage").attr("val");
                $("#rowsperpage").val(value);

            $("#rowsperpage").change(function () { BuildUrl(); });
                //    function () {
                //    var url = $("#rowsperpage option:selected").data('url');
                //    document.location = url;
                //    }
                //);

            $("#search").on("click", function () { BuildUrl(); });

            $("#searchData").change(function () {
                if (!$("#searchData").val()) { BuildUrl(); }
            });
            }
            )
    </script>

    @Scripts.Render("~/bundles/ajax")
}
@*@Ajax.RawActionLink("<input type='checkbox' id=cb_" + @item.Value.wordId+" checked="+@item.Value.inLearning+">", "EditWord","Dictionary",
    new { area = "", id = @item.Value.wordId, @*check = @<script>$("#cb" +@item.Value.wordId).prop("checked")</script>
            },
            new AjaxOptions
            {
                UpdateTargetId = "grid"
            }, null)*@


@*<table class="table table-hover">
        <thead>
            <tr>
                <th>На вивченні</th>
                <th>Слово</th>
                <th>Переклад</th>
            </tr>
        </thead>
        <tbody>
            @foreach (dynamic el in Model)
            {
                <tr>
                    <td>@el.InLearning</td>
                    <td>@el.word.Word1</td>
                    <td>@el.word.Translate</td>
                </tr>
            }
        </tbody>
    </table>*@