@*@model IEnumerable<object[]>*@
@using EnglishLearning.ExtendClasses;
@model EnglishLearning.Controllers.PagedList<EnglishLearning.Controllers.WordsDisplay>
@{
    ViewBag.Title = "Words";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var grid = new WebGrid(canPage: true, rowsPerPage: Model.PageSize, ajaxUpdateContainerId: "gridContent");
    grid.Bind(source: Model.Content, rowCount: Model.TotalRecords, autoSortAndPage: false);
    @*@:<script>$("#RowsPerPage").text()</script>*@
}

<h2>Words</h2>

@*@Html.DropDownList("RowsPerPage", new SelectList(new List<int> { 10, 25, 50, 100 }), new { id = "RowsPerPage", @class = "btn btn-info text-light" })*@
<div class="d-flex flex-row">
    @*@using (Html.BeginForm("SearchAndRows", "Dictionary", FormMethod.Post)) {*@
    @*<input id="GroupId" type="hidden" name="GroupId" value="@ViewBag.GroupId" />*@
    <select class="btn btn-outline-info mb-1 mr-1" id="rowsperpage" name="rowsperpage" val="@Model.PageSize">
        @*onchange="this.form.submit();"*@
        <option data-url="@Url.Action("RowsPerPage", new { area = "", id = ViewBag.GroupId, pageSize = 10 })" value="10">10</option>  @*page = Model.CurrentPage, prevPageSize = Model.PageSize,totalPages = Model.TotalPages*@
        <option data-url="@Url.Action("RowsPerPage", new { area = "", id = ViewBag.GroupId, pageSize = 25 })" value="25">25</option>
        <option data-url="@Url.Action("RowsPerPage", new { area = "", id = ViewBag.GroupId, pageSize = 50 })" value="50">50</option>
        <option data-url="@Url.Action("RowsPerPage", new { area = "", id = ViewBag.GroupId, pageSize = 100 })" value="100">100</option>
    </select>

    <div class="ml-auto">
        <div class="input-group mb-1">
            <input id="searchData" type="text" class="form-control" placeholder="Слово або значення" aria-label="Слово або значення" aria-describedby="button-addon2" value="@(ViewBag.SearchData == null ? "" : ViewBag.SearchData)">
            <div class="input-group-append">
                <button id="search" class="btn btn-outline-secondary" type="button" data-url="@Url.Action("Search", new { area = "", id = ViewBag.GroupId })">Пошук</button>
                @*<input id="search" class="btn btn-outline-secondary" type="submit" data-url="@Url.Action("Search", new { area = "", id = ViewBag.GroupId })" value="Пошук" />*@
            </div>
        </div>
    </div>
    @*}*@
</div>

<div id="gridChange">
<div id="gridContent">
@grid.GetHtml(
    tableStyle: "table table-hover", headerStyle: "thead-dark", caption: "Вибір слів на вивчення",
    mode: WebGridPagerModes.All, numericLinksCount: 5,
    columns: grid.Columns(
        grid.Column(header: "Відмітити", format:
        @:@Ajax.RawActionLink( 
         @item.Value.inLearning == false 
         ? "<div id = cb_" + (@item.Value.wordId as int?) + " class='badge badge-secondary'>Додати слово</div>" 
         : "<div id = cb_" + (@item.Value.wordId as int?) + " class='badge badge-success'>На вивченні</div>",
         "EditWord", "Dictionary", new{ area = "", id = @item.Value.wordId, check = @item.Value.inLearning },
         new AjaxOptions {
            OnBegin = "WordInLearningChange(" + @item.Value.wordId + ")",
            OnSuccess = "MessageShow("+@item.Value.wordId+")"
         }, null)
),
         grid.Column("word", header: "Слово", format: @<div>@item.Value.word</div>),
         grid.Column("translate", header: "Значення", format:@<div>@item.Value.translate</div>)),
    previousText: "Попередня", nextText: "Наступна", firstText: "Перша", lastText: "Остання",
    footerStyle: "tfoot", htmlAttributes: new { id = "grid" })
</div>
</div>

<div id="messages"></div>

@section Scripts{
    <script type="text/javascript">

        var BuildUrl = function () {
            var searchData = $("#searchData").val();
            var urlSize = $("#rowsperpage option:selected").data('url');
            var url;
            if (searchData) {
                var urlSearch = $("#search").data('url');
                urlSize = urlSize.substring(urlSize.indexOf("?") + 1);
                urlSearch += "?search="+searchData;
                url = urlSearch + "&" + urlSize;
            }
            else {
                url = urlSize;
            }
            document.location = url;
        }

        var WordInLearningChange = function (data) {
            var clas = $("#cb_" + data).attr('class');
            var val1 = "badge badge-secondary";
            var val2 = "badge badge-success";
            if (clas === val1) {
                $("#cb_" + data).attr('class', val2);
                $("#cb_" + data).text("На вивченні");
            }
            else {
                $("#cb_" + data).attr('class', val1);
                $("#cb_" + data).text("Додати слово");
            }
        }

        var MessageShow = function (data) {
            $("#messages").html("<div class='alert alert-warning alert-dismissible fade show' role='alert'>"
                + "Ваш словник було успішно змінено"
                + "<button type = 'button' class= 'close' data-dismiss='alert' aria-label='Close' >"
                + "<span aria-hidden='true'>&times;</span></button ></div >");
            var link = $("#cb_" + data).parent().attr("href");
            var arr = link.split('check=');
            var replace = arr[1].toLowerCase() === "true" ? "false" : "true";
            var newLink = link.replace(arr[1], replace);
            $("#cb_" + data).parent().attr("href", newLink);
        }

        var setPaginationStyle = function () {
            $("tfoot a").addClass('btn btn-secondary mb-1');
            $("tfoot td")
                .contents()
                .filter(function () {
                    if (this.nodeType === 3 && this.length > 1) {
                        return this.nodeType
                    }
                })
                .wrap('<span class="btn btn-primary mx-1 mb-1" />');
        }

        var setGridChangeListener = function () {

            var targetNode = document.getElementById('gridChange');
            var config = { attributes: false, childList: true, subtree: false };
            var callback = function (mutationsList, observer) {
                for (var mutation of mutationsList) {
                    if (mutation.type == 'childList') {
                        setPaginationStyle();
                    }
                }
            };
            var observer = new MutationObserver(callback);
            observer.observe(targetNode, config);
        }

        window.onload =
            $(document).ready(function () {

                setPaginationStyle();

                var value = $("#rowsperpage").attr("val");
                $("#rowsperpage").val(value);

                $("#rowsperpage").change(function () { BuildUrl(); });
                //    function () {
                //    var url = $("#rowsperpage option:selected").data('url');
                //    document.location = url;
                //    }
                //);

                $("#search").on("click", function () { BuildUrl(); });

                $("#searchData").change(function () {
                    if (!$("#searchData").val()) { BuildUrl(); }
                });

                setGridChangeListener();
            }
            )
    </script>

    @Scripts.Render("~/bundles/ajax")
}

